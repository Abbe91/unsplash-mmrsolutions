{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/ButtonDark/DarkMode.js\";\nimport React from 'react';\nimport '../styles/DarkMode.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DarkMode = () => {\n  let clickedClass = 'clicked';\n  const body = document.body;\n  const lightTheme = 'light';\n  const darkTheme = 'dark';\n  let theme;\n\n  if (localStorage) {\n    theme = localStorage.getItem('theme');\n  }\n\n  if (theme === lightTheme || theme === darkTheme) {\n    body.classList.add(theme);\n  } else {\n    body.classList.add(lightTheme);\n  }\n\n  const switchTheme = e => {\n    if (theme === darkTheme) {\n      body.classList.replace(darkTheme, lightTheme);\n      e.target.classList.remove(clickedClass);\n      localStorage.setItem('theme', 'light');\n      theme = lightTheme;\n    } else {\n      body.classList.replace(lightTheme, darkTheme);\n      e.target.classList.add(clickedClass);\n      localStorage.setItem('theme', 'dark');\n      theme = darkTheme;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: theme === 'dark' ? clickedClass : '',\n    id: \"darkMode\",\n    onClick: e => switchTheme(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DarkMode;\nexport default DarkMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"sources":["/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/ButtonDark/DarkMode.js"],"names":["React","DarkMode","clickedClass","body","document","lightTheme","darkTheme","theme","localStorage","getItem","classList","add","switchTheme","e","replace","target","remove","setItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,YAAY,GAAG,SAAnB;AACA,QAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAtB;AACA,QAAME,UAAU,GAAG,OAAnB;AACA,QAAMC,SAAS,GAAG,MAAlB;AACA,MAAIC,KAAJ;;AAEA,MAAIC,YAAJ,EAAkB;AAChBD,IAAAA,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACD;;AAED,MAAIF,KAAK,KAAKF,UAAV,IAAwBE,KAAK,KAAKD,SAAtC,EAAiD;AAC/CH,IAAAA,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBJ,KAAnB;AACD,GAFD,MAEO;AACLJ,IAAAA,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBN,UAAnB;AACD;;AAED,QAAMO,WAAW,GAAIC,CAAD,IAAO;AACzB,QAAIN,KAAK,KAAKD,SAAd,EAAyB;AACvBH,MAAAA,IAAI,CAACO,SAAL,CAAeI,OAAf,CAAuBR,SAAvB,EAAkCD,UAAlC;AACAQ,MAAAA,CAAC,CAACE,MAAF,CAASL,SAAT,CAAmBM,MAAnB,CAA0Bd,YAA1B;AACAM,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACAV,MAAAA,KAAK,GAAGF,UAAR;AACD,KALD,MAKO;AACLF,MAAAA,IAAI,CAACO,SAAL,CAAeI,OAAf,CAAuBT,UAAvB,EAAmCC,SAAnC;AACAO,MAAAA,CAAC,CAACE,MAAF,CAASL,SAAT,CAAmBC,GAAnB,CAAuBT,YAAvB;AACAM,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACAV,MAAAA,KAAK,GAAGD,SAAR;AACD;AACF,GAZD;;AAcA,sBACE;AACE,IAAA,SAAS,EAAEC,KAAK,KAAK,MAAV,GAAmBL,YAAnB,GAAkC,EAD/C;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,OAAO,EAAGW,CAAD,IAAOD,WAAW,CAACC,CAAD;AAH7B;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAtCD;;KAAMZ,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport '../styles/DarkMode.css'\n\nconst DarkMode = () => {\n  let clickedClass = 'clicked'\n  const body = document.body\n  const lightTheme = 'light'\n  const darkTheme = 'dark'\n  let theme\n\n  if (localStorage) {\n    theme = localStorage.getItem('theme')\n  }\n\n  if (theme === lightTheme || theme === darkTheme) {\n    body.classList.add(theme)\n  } else {\n    body.classList.add(lightTheme)\n  }\n\n  const switchTheme = (e) => {\n    if (theme === darkTheme) {\n      body.classList.replace(darkTheme, lightTheme)\n      e.target.classList.remove(clickedClass)\n      localStorage.setItem('theme', 'light')\n      theme = lightTheme\n    } else {\n      body.classList.replace(lightTheme, darkTheme)\n      e.target.classList.add(clickedClass)\n      localStorage.setItem('theme', 'dark')\n      theme = darkTheme\n    }\n  }\n\n  return (\n    <button\n      className={theme === 'dark' ? clickedClass : ''}\n      id=\"darkMode\"\n      onClick={(e) => switchTheme(e)}\n    ></button>\n  )\n}\n\nexport default DarkMode\n"]},"metadata":{},"sourceType":"module"}