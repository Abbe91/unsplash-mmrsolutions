{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/lottie-view/lottie-view.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useStyles from './styles';\nimport Lottie from 'lottie-react';\nimport { Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LottieView = props => {\n  _s();\n\n  const classes = useStyles();\n  const [isLooping, setIsLooping] = useState(false);\n  const defaultOptions = {\n    loop: isLooping,\n    autoplay: true,\n    animationData: props.lottieAnimation\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.container,\n    onMouseEnter: () => setIsLooping(true),\n    onMouseLeave: () => setIsLooping(false),\n    children: /*#__PURE__*/_jsxDEV(Lottie, {\n      options: defaultOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LottieView, \"3/K/WDAgI5GfxoAesVo8IuPmzLo=\", false, function () {\n  return [useStyles];\n});\n\n_c = LottieView;\nexport default LottieView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LottieView\");","map":{"version":3,"sources":["/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/lottie-view/lottie-view.tsx"],"names":["React","useState","useStyles","Lottie","Grid","LottieView","props","classes","isLooping","setIsLooping","defaultOptions","loop","autoplay","animationData","lottieAnimation","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAAwB;AAAA;;AAEzC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMS,cAAc,GAAG;AACrBC,IAAAA,IAAI,EAAEH,SADe;AAErBI,IAAAA,QAAQ,EAAE,IAFW;AAGrBC,IAAAA,aAAa,EAAEP,KAAK,CAACQ;AAHA,GAAvB;AAMA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEP,OAAO,CAACQ,SAAzB;AAAoC,IAAA,YAAY,EAAE,MAAMN,YAAY,CAAC,IAAD,CAApE;AAA4E,IAAA,YAAY,EAAE,MAAMA,YAAY,CAAC,KAAD,CAA5G;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,OAAO,EACLC;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArBD;;GAAML,U;UAEYH,S;;;KAFZG,U;AAsBN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport useStyles from './styles';\nimport Lottie from 'lottie-react';\nimport { Grid } from '@material-ui/core';\n\ntype LottieProps = {\n  lottieAnimation?: any;\n};\n\nconst LottieView = (props: LottieProps) => {\n\n  const classes = useStyles();\n  const [isLooping, setIsLooping] = useState(false)\n\n  const defaultOptions = {\n    loop: isLooping,\n    autoplay: true,\n    animationData: props.lottieAnimation,\n  };\n\n  return (\n    <Grid className={classes.container} onMouseEnter={() => setIsLooping(true)} onMouseLeave={() => setIsLooping(false)}>\n      <Lottie\n        options={\n          defaultOptions\n        }\n      />\n    </Grid>\n  )\n\n}\nexport default LottieView;"]},"metadata":{},"sourceType":"module"}