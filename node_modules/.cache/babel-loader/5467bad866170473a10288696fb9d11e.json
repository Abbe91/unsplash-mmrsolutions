{"ast":null,"code":"import _regeneratorRuntime from\"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var baseURL='https://api.unsplash.com';var API_KEY='OLtR-i0lLbEb2BAm8mzp8U9kNC8KuIwuCph7BUmrkG0';// const API_KEY = process.env.API_KEY\nexport var getImage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(baseURL,\"/photos?per_page=10\"),{headers:{Authorization:\"Client-ID \".concat(API_KEY)}});case 3:res=_context.sent;if(res.ok){_context.next=7;break;}console.error(res.statusText);return _context.abrupt(\"return\");case 7:_context.next=9;return res.json();case 9:json=_context.sent;return _context.abrupt(\"return\",json);case 13:_context.prev=13;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[0,13]]);}));return function getImage(){return _ref.apply(this,arguments);};}();//return the search images\nexport var getSearchImages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query){var url,res,json;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=new URL(\"\".concat(baseURL,\"/search/photos\"));url.search=new URLSearchParams({per_page:30,query:query});_context2.prev=2;_context2.next=5;return fetch(url,{headers:{Authorization:\"Client-ID \".concat(API_KEY)}});case 5:res=_context2.sent;if(res.ok){_context2.next=9;break;}console.error(res.statusText);return _context2.abrupt(\"return\");case 9:_context2.next=11;return res.json();case 11:json=_context2.sent;return _context2.abrupt(\"return\",json.results);case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0);case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[2,15]]);}));return function getSearchImages(_x){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/api/api.js"],"names":["baseURL","API_KEY","getImage","fetch","headers","Authorization","res","ok","console","error","statusText","json","log","getSearchImages","query","url","URL","search","URLSearchParams","per_page","results"],"mappings":"qWAAA,GAAMA,CAAAA,OAAO,CAAG,0BAAhB,CACA,GAAMC,CAAAA,OAAO,CAAG,6CAAhB,CACA;AACA,MAAO,IAAMC,CAAAA,QAAQ,0FAAG,sLAEFC,CAAAA,KAAK,WAAIH,OAAJ,wBAAkC,CACvDI,OAAO,CAAE,CACPC,aAAa,qBAAeJ,OAAf,CADN,CAD8C,CAAlC,CAFH,QAEdK,GAFc,kBAOfA,GAAG,CAACC,EAPW,yBAQlBC,OAAO,CAACC,KAAR,CAAcH,GAAG,CAACI,UAAlB,EARkB,8DAWDJ,CAAAA,GAAG,CAACK,IAAJ,EAXC,QAWdA,IAXc,+CAabA,IAba,4DAepBH,OAAO,CAACI,GAAR,cAfoB,qEAAH,kBAARV,CAAAA,QAAQ,0CAAd,CAmBP;AACA,MAAO,IAAMW,CAAAA,eAAe,2FAAG,kBAAOC,KAAP,uIACvBC,GADuB,CACjB,GAAIC,CAAAA,GAAJ,WAAWhB,OAAX,mBADiB,CAE7Be,GAAG,CAACE,MAAJ,CAAa,GAAIC,CAAAA,eAAJ,CAAoB,CAC/BC,QAAQ,CAAE,EADqB,CAE/BL,KAAK,CAAEA,KAFwB,CAApB,CAAb,CAF6B,wCAOTX,CAAAA,KAAK,CAACY,GAAD,CAAM,CAC3BX,OAAO,CAAE,CACPC,aAAa,qBAAeJ,OAAf,CADN,CADkB,CAAN,CAPI,QAOrBK,GAPqB,mBAYtBA,GAAG,CAACC,EAZkB,0BAazBC,OAAO,CAACC,KAAR,CAAcH,GAAG,CAACI,UAAlB,EAbyB,iEAgBRJ,CAAAA,GAAG,CAACK,IAAJ,EAhBQ,SAgBrBA,IAhBqB,iDAkBpBA,IAAI,CAACS,OAlBe,+DAoB3BZ,OAAO,CAACI,GAAR,eApB2B,uEAAH,kBAAfC,CAAAA,eAAe,6CAArB","sourcesContent":["const baseURL = 'https://api.unsplash.com'\nconst API_KEY = 'OLtR-i0lLbEb2BAm8mzp8U9kNC8KuIwuCph7BUmrkG0'\n// const API_KEY = process.env.API_KEY\nexport const getImage = async () => {\n  try {\n    const res = await fetch(`${baseURL}/photos?per_page=10`, {\n      headers: {\n        Authorization: `Client-ID ${API_KEY}`,\n      },\n    })\n    if (!res.ok) {\n      console.error(res.statusText)\n      return\n    }\n    const json = await res.json()\n    // console.log(json)\n    return json\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n//return the search images\nexport const getSearchImages = async (query) => {\n  const url = new URL(`${baseURL}/search/photos`)\n  url.search = new URLSearchParams({\n    per_page: 30,\n    query: query,\n  })\n  try {\n    const res = await fetch(url, {\n      headers: {\n        Authorization: `Client-ID ${API_KEY}`,\n      },\n    })\n    if (!res.ok) {\n      console.error(res.statusText)\n      return\n    }\n    const json = await res.json()\n    // console.log(json)\n    return json.results\n  } catch (error) {\n    console.log(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}