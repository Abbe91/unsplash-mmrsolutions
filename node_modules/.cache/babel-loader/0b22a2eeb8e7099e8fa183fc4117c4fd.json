{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/navbar.tsx\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport useStyles from './styles';\nimport \"@fontsource/roboto\"; // Loading Roboto font. Material-UI was designed with this font in mind.\n\nimport { ThemeProvider, Card, CardHeader, CardContent, Box, Container, CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\"; // Define theme settings\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst light = {\n  palette: {\n    type: \"light\"\n  }\n};\nconst dark = {\n  palette: {\n    type: \"dark\"\n  }\n};\n\nconst NavBar = ({\n  input,\n  setInput\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const changeTheme = () => {\n    setIsDarkTheme(!isDarkTheme);\n  };\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleChange = event => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n\n  const renderMenu = /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: menuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMenuOpen,\n    onClose: handleMenuClose,\n    children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: handleMenuClose,\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: handleMenuClose,\n      children: \"My account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n\n  const renderMobileMenu = /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: mobileMoreAnchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: mobileMenuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMobileMenuOpen,\n    onClose: handleMobileMenuClose,\n    children: /*#__PURE__*/_jsxDEV(MenuItem, {\n      children: /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: isDarkTheme,\n            onChange: changeTheme,\n            \"aria-label\": \"login switch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 20\n          }, this),\n          label: auth ? 'Light' : 'Dark'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: isDarkTheme ? createMuiTheme(dark) : createMuiTheme(light),\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"div\",\n          p: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            action: /*#__PURE__*/_jsxDEV(FormGroup, {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: isDarkTheme,\n                  onChange: changeTheme\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this),\n                label: \"Dark Theme\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              component: \"h3\",\n              children: \"Kindacode.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"Dark Mode is \", isDarkTheme ? \"On\" : \"Off\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this) // <div className={classes.grow}>\n  //   <AppBar position=\"static\" color=\"default\">\n  //     <Toolbar>\n  //     <Typography className={classes.logo} variant=\"h6\" noWrap>\n  //     Unsplash\n  //       </Typography>\n  //       <div className={classes.search}>\n  //         <div className={classes.searchIcon}>\n  //           <SearchIcon />\n  //         </div>\n  //         <InputBase\n  //           placeholder=\"Searchâ€¦\"\n  //           classes={{\n  //             root: classes.inputRoot,\n  //             input: classes.inputInput,\n  //           }}\n  //           value={input}\n  //           onChange={(e) => setInput(e.target.value)}\n  //           inputProps={{ 'aria-label': 'search' }}\n  //         />\n  //       </div>\n  //       <div className={classes.grow} />\n  //       <div className={classes.sectionDesktop}>\n  //         <FormGroup>\n  //           <FormControlLabel\n  //             control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n  //             label={auth ? 'Light' : 'Dark'}\n  //           />\n  //         </FormGroup>\n  //       </div>\n  //       <div className={classes.sectionMobile}>\n  //         <IconButton\n  //           aria-label=\"show more\"\n  //           aria-controls={mobileMenuId}\n  //           aria-haspopup=\"true\"\n  //           onClick={handleMobileMenuOpen}\n  //           color=\"inherit\"\n  //         >\n  //           <MoreIcon />\n  //         </IconButton>\n  //       </div>\n  //     </Toolbar>\n  //   </AppBar>\n  //   {renderMobileMenu}\n  //   {renderMenu}\n  //</div>\n  // </Container>\n  // </ThemeProvider>\n  ;\n};\n\n_s(NavBar, \"a/pyBDJhdt0AIq9QIdCzRVfZXzo=\", false, function () {\n  return [useStyles];\n});\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/navbar.tsx"],"names":["React","useState","Typography","MenuItem","Menu","FormControlLabel","FormGroup","Switch","useStyles","ThemeProvider","Card","CardHeader","CardContent","Box","Container","CssBaseline","createMuiTheme","light","palette","type","dark","NavBar","input","setInput","classes","isDarkTheme","setIsDarkTheme","auth","setAuth","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","changeTheme","isMenuOpen","Boolean","isMobileMenuOpen","handleChange","event","target","checked","handleMobileMenuClose","handleMenuClose","handleMobileMenuOpen","currentTarget","menuId","renderMenu","vertical","horizontal","mobileMenuId","renderMobileMenu"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport React, {useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport useStyles from './styles';\nimport \"@fontsource/roboto\"; // Loading Roboto font. Material-UI was designed with this font in mind.\nimport {\n  ThemeProvider,\n  Card,\n  CardHeader,\n  CardContent,\n  Box,\n  Container,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// Define theme settings\nconst light = {\n  palette: {\n    type: \"light\",\n  },\n};\n\nconst dark = {\n  palette: {\n    type: \"dark\",\n  },\n};\n\nconst NavBar = ({input, setInput}) => {\n  const classes = useStyles()\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const changeTheme = () => {\n    setIsDarkTheme(!isDarkTheme);\n  };\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAuth(event.target.checked);\n  };\n  \n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      \n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={isDarkTheme} onChange={changeTheme} aria-label=\"login switch\" />}\n          label={auth ? 'Light' : 'Dark'}\n        />\n      </FormGroup>\n    </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <ThemeProvider\n      theme={isDarkTheme ? createMuiTheme(dark) : createMuiTheme(light)}\n    >\n      <CssBaseline />\n      <Container><div className=\"App\">\n          <Box component=\"div\" p={5}></Box>\n          <Card>\n            <CardHeader\n              action={\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Switch checked={isDarkTheme} onChange={changeTheme} />\n                    }\n                    label=\"Dark Theme\"\n                  />\n                </FormGroup>\n              }\n            />\n            <CardContent>\n              <Typography variant=\"h3\" component=\"h3\">\n                Kindacode.com\n              </Typography>\n              <Typography variant=\"body1\">\n                Dark Mode is {isDarkTheme ? \"On\" : \"Off\"}\n              </Typography>\n            </CardContent>\n          </Card>\n        </div>\n      </Container>\n    </ThemeProvider>\n    // <div className={classes.grow}>\n    //   <AppBar position=\"static\" color=\"default\">\n    //     <Toolbar>\n    //     <Typography className={classes.logo} variant=\"h6\" noWrap>\n    //     Unsplash\n    //       </Typography>\n    //       <div className={classes.search}>\n    //         <div className={classes.searchIcon}>\n    //           <SearchIcon />\n    //         </div>\n    //         <InputBase\n    //           placeholder=\"Searchâ€¦\"\n    //           classes={{\n    //             root: classes.inputRoot,\n    //             input: classes.inputInput,\n    //           }}\n    //           value={input}\n    //           onChange={(e) => setInput(e.target.value)}\n    //           inputProps={{ 'aria-label': 'search' }}\n    //         />\n    //       </div>\n    //       <div className={classes.grow} />\n    //       <div className={classes.sectionDesktop}>\n    //         <FormGroup>\n    //           <FormControlLabel\n    //             control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n    //             label={auth ? 'Light' : 'Dark'}\n    //           />\n    //         </FormGroup>\n    //       </div>\n    //       <div className={classes.sectionMobile}>\n    //         <IconButton\n    //           aria-label=\"show more\"\n    //           aria-controls={mobileMenuId}\n    //           aria-haspopup=\"true\"\n    //           onClick={handleMobileMenuOpen}\n    //           color=\"inherit\"\n    //         >\n    //           <MoreIcon />\n    //         </IconButton>\n           \n    //       </div>\n    //     </Toolbar>\n    //   </AppBar>\n    //   {renderMobileMenu}\n    //   {renderMenu}\n    //</div>\n   // </Container>\n   // </ThemeProvider>\n  );\n}\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}