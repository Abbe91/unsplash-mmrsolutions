[{"/Users/abdullahabualhaijja/Downloads/unsplash-mmrsolutions-main/unsplach-project/src/index.js":"1","/Users/abdullahabualhaijja/Downloads/unsplash-mmrsolutions-main/unsplach-project/src/reportWebVitals.js":"2","/Users/abdullahabualhaijja/Downloads/unsplash-mmrsolutions-main/unsplach-project/src/App.js":"3","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/index.js":"4","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/App.js":"5","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/api/api.js":"6","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/index.tsx":"7","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/navbar.tsx":"8","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/styles.tsx":"9","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/hero/index.tsx":"10","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/hero/hero.tsx":"11","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/hero/styles.tsx":"12","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/gallery.jsx":"13","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/image.tsx":"14"},{"size":500,"mtime":1631360368663,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1631360368665,"results":"17","hashOfConfig":"16"},{"size":528,"mtime":1631360368660,"results":"18","hashOfConfig":"16"},{"size":133,"mtime":1631381889994,"results":"19","hashOfConfig":"20"},{"size":424,"mtime":1631381889957,"results":"21","hashOfConfig":"20"},{"size":1066,"mtime":1631381889958,"results":"22","hashOfConfig":"20"},{"size":54,"mtime":1631381889990,"results":"23","hashOfConfig":"20"},{"size":5164,"mtime":1631381889991,"results":"24","hashOfConfig":"20"},{"size":2267,"mtime":1631381889993,"results":"25","hashOfConfig":"20"},{"size":48,"mtime":1631381889986,"results":"26","hashOfConfig":"20"},{"size":1199,"mtime":1631381889984,"results":"27","hashOfConfig":"20"},{"size":570,"mtime":1631381889987,"results":"28","hashOfConfig":"20"},{"size":2118,"mtime":1631381889974,"results":"29","hashOfConfig":"20"},{"size":695,"mtime":1631381889988,"results":"30","hashOfConfig":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dbhipv",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7aqw67",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"/Users/abdullahabualhaijja/Downloads/unsplash-mmrsolutions-main/unsplach-project/src/index.js",[],"/Users/abdullahabualhaijja/Downloads/unsplash-mmrsolutions-main/unsplach-project/src/reportWebVitals.js",[],"/Users/abdullahabualhaijja/Downloads/unsplash-mmrsolutions-main/unsplach-project/src/App.js",[],"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/index.js",[],"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/App.js",[],"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/api/api.js",[],"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/index.tsx",[],"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/navbar.tsx",["64","65","66"],"// @ts-nocheck\nimport React, {useState} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport useStyles from './styles';\nimport \"@fontsource/roboto\"; // Loading Roboto font. Material-UI was designed with this font in mind.\nimport {\n  ThemeProvider,\n  Card,\n  CardHeader,\n  CardContent,\n  Box,\n  Container,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// Define theme settings\nconst light = {\n  palette: {\n    type: \"light\",\n  },\n};\n\nconst dark = {\n  palette: {\n    type: \"dark\",\n  },\n};\n\nconst NavBar = ({input, setInput}) => {\n  const classes = useStyles()\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const changeTheme = () => {\n    setIsDarkTheme(!isDarkTheme);\n  };\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAuth(event.target.checked);\n  };\n  \n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      \n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={isDarkTheme} onChange={changeTheme} aria-label=\"login switch\" />}\n          label={auth ? 'Light' : 'Dark'}\n        />\n      </FormGroup>\n    </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <ThemeProvider\n      theme={isDarkTheme ? createMuiTheme(dark) : createMuiTheme(light)}\n    >\n      <CssBaseline />\n      <Container>\n            <CardContent>\n              <Typography variant=\"body1\">\n              </Typography>\n            </CardContent>\n    <div className={classes.grow}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n        <Typography className={classes.logo} variant=\"h6\" noWrap>\n        Unsplash\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n          <CardHeader\n              action={\n                <FormGroup>\n                  <FormControlLabel\n                    control={\n                      <Switch checked={isDarkTheme} onChange={changeTheme} />\n                    }\n                    label=\"Dark Theme\"\n                  />\n                </FormGroup>\n              }\n            />\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n           \n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n   </Container>\n   </ThemeProvider>\n  );\n}\nexport default NavBar;","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/navBar/styles.tsx",["67","68","69"],"import { alpha, makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { findByLabelText } from \"@testing-library/dom\";\n\nexport default makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    nav: {\n        display: 'flex',\n        alignItems: 'center',\n        marginRight: 1.2,\n        fontSize: '14px',\n        fontWeight: 550,\n    },\n    navbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: 1,\n    },\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    logo: {\n        color: '#000',\n    },\n    navSearchForm: {\n        marginLeft: 1,\n    },\n    categoryNav: {\n        display: 'flex',\n        paddingLeft: 0.6,\n        overflow: 'hidden',\n    },\n    category: {\n        padding: 0.8,\n    },\n   //new line\n   grow: {\n      flexGrow: 1,\n    },\n   \n    \n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: '20ch',\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n  }))","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/hero/index.tsx",[],"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/hero/hero.tsx",["70","71","72","73"],"// @ts-nocheck\nimport useStyles from './styles';\n\n\n\nconst Hero = ({ input, setInput }) => {\nconst classes = useStyles();\n  return (\n      <div className={classes.hero}>\n        <div className={classes.heroContainer} >\n            <div className={classes.heroContent}>\n                <h1>Unsplash</h1>\n                <p>\n                The internetâ€™s source of freely useable images.\n                Powered by creators everywhere.\n                </p>\n                <div className={classes.heroSearchForm} >\n                <form>\n                    <input type=\"text\" \n                    placeholder=\"Search free high-resolution photos\" \n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}/>\n                </form>\n                </div>\n                <div className={classes.trendingSearchTags}  class=\"trending-search-tags\">\n                <p>Trending searches: <a href=\"#\">flower</a>, <a href=\"#\">wallpaper</a>, <a href=\"#\">sad</a>, <a href=\"#\">love</a></p>\n                </div>\n            </div>\n            </div>\n            <div className={classes.heroOverlay}  class=\"hero-overlay\"></div>\n    </div>\n  );\n};\nexport default Hero;\n","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/hero/styles.tsx",[],"/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/gallery.jsx",["74","75"],"// import React, { useEffect, useState } from 'react'\n// import Image from './image'\n// import { getImage, getSearchImages } from '../api/api'\n\n// const Gallery = ({ query }) => {\n//   const [imagList, setImageList] = useState([])\n//   useEffect(() => {\n//     getImage().then((data) => {\n//       setImageList(data)\n//     })\n//   }, [])\n//   useEffect(async () => {\n//     const data = await getSearchImages(query)\n//     setImageList(data)\n//     // console.log(data)\n//   }, [query])\n//   return (\n//     <div>\n//       {imagList.map((img) => {\n//         return <Image src={img.urls.small} key={img.id} />\n//       })}\n//     </div>\n//   )\n// }\n// export default Gallery\nimport React, { useEffect, useState } from 'react'\nimport Modal from 'react-modal'\nimport Image from './image'\n\nimport { getSearchImages, getImage } from '../api/api'\nimport Masonry from 'react-masonry-component'\n\nconst modalStyle = {\n  content: {\n    border: 'none',\n    padding: 'none',\n    overflow: 'none',\n    // background: \"none\",\n  },\n}\nconst Gallery = ({ query }) => {\n  const [imgList, setImgList] = useState([])\n  const [currentImg, setCurrentImg] = useState(null)\n\n  useEffect(() => {\n    getImage().then((data) => {\n      //   console.log(data);\n      setImgList(data)\n    })\n  }, [])\n\n  useEffect(async () => {\n    if (query.trim() === '') {\n      return\n    }\n    const data = await getSearchImages(query)\n    setImgList(data)\n    // console.log(data);\n  }, [query])\n\n  Modal.setAppElement('#app')\n  return (\n    <div>\n      <Modal\n        contentLabel=\"Image preview\"\n        style={modalStyle}\n        isOpen={!!currentImg}\n        onRequestClose={() => setCurrentImg(null)}\n      >\n        <img className=\"img-preview\" src={currentImg} alt=\"image preview\" />\n      </Modal>\n\n      {imgList.length === 0 ? <h2>No images found</h2> : null}\n      <Masonry className=\"grid-container\" options={{ isFitWidth: true }}>\n        {imgList.map((img) => {\n          return (\n            <Image urls={img.urls} handleClick={setCurrentImg} key={img.id} />\n          )\n        })}\n      </Masonry>\n    </div>\n  )\n}\n\nexport default Gallery\n","/Users/abdullahabualhaijja/mmrsoultions/unsplash-mmrsolutions/src/components/image.tsx",["76"],"// @ts-nocheck\n\nimport React from 'react'\n\nconst Image = ({ urls, handleClick }) => {\n  return (\n    <li className=\"img\" onClick={() => handleClick(urls.regular)}>\n      <img src={urls.small} alt=\"Picsum photo\" width=\"250\" />\n    </li>\n  )\n}\nexport default Image\n// import React from 'react'\n// import Skeleton from '@material-ui/lab/Skeleton'\n// import { makeStyles } from '@material-ui/core/styles'\n\n// const useStyles = makeStyles({\n//   root: {\n//     width: 300,\n//   },\n// })\n\n// const Image = ({ src }) => {\n//   const classes = useStyles()\n//   return (\n//     <div className={classes.root}>\n//       <img src={src} className=\"image\" />\n//     </div>\n//   )\n// }\n// export default Image\n",{"ruleId":"77","severity":1,"message":"78","line":19,"column":3,"nodeType":"79","messageId":"80","endLine":19,"endColumn":7},{"ruleId":"77","severity":1,"message":"81","line":22,"column":3,"nodeType":"79","messageId":"80","endLine":22,"endColumn":6},{"ruleId":"77","severity":1,"message":"82","line":54,"column":9,"nodeType":"79","messageId":"80","endLine":54,"endColumn":21},{"ruleId":"77","severity":1,"message":"83","line":1,"column":29,"nodeType":"79","messageId":"80","endLine":1,"endColumn":34},{"ruleId":"77","severity":1,"message":"84","line":1,"column":36,"nodeType":"79","messageId":"80","endLine":1,"endColumn":48},{"ruleId":"77","severity":1,"message":"85","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":26,"column":39,"nodeType":"88","endLine":26,"endColumn":51},{"ruleId":"86","severity":1,"message":"87","line":26,"column":63,"nodeType":"88","endLine":26,"endColumn":75},{"ruleId":"86","severity":1,"message":"87","line":26,"column":90,"nodeType":"88","endLine":26,"endColumn":102},{"ruleId":"86","severity":1,"message":"87","line":26,"column":111,"nodeType":"88","endLine":26,"endColumn":123},{"ruleId":"89","severity":1,"message":"90","line":52,"column":13,"nodeType":"91","endLine":59,"endColumn":4},{"ruleId":"92","severity":1,"message":"93","line":70,"column":9,"nodeType":"88","endLine":70,"endColumn":77},{"ruleId":"92","severity":1,"message":"93","line":8,"column":7,"nodeType":"88","endLine":8,"endColumn":62},"@typescript-eslint/no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'handleChange' is assigned a value but never used.","'Theme' is defined but never used.","'createStyles' is defined but never used.","'findByLabelText' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]